{"version":3,"sources":["services/article.js","components/Notification/InputNotification/Notification.js","components/Edit/Edit.js","components/Notification/InputNotification/Notification.module.css","yupSchemaValidation/modelsValidation.js","components/Edit/EditModel/editModel.js","components/CategoryModels/Layout/ModelLayout.js","components/CategoryModels/Animals.js","components/CategoryModels/Cars.js","components/CategoryModels/Clothes.js"],"names":["REACT_APP_BASE_URL","process","getAll","fetch","then","res","json","getByCategory","category","getById","id","createArticle","data","method","headers","credentials","body","JSON","stringify","createComment","getArtComments","updateArticle","deleteArticle","addLike","getUserArticles","userId","getUserLikedCreatedArticles","Notification","props","className","style","errors","children","Edit","useState","artData","setArtData","artId","useParams","useEffect","article","catch","err","console","log","message","modelComponents","cars","Cars","animals","Animals","clothes","Clothes","module","exports","carsSchema","yup","shape","marke","required","model","year","min","max","city","image","matches","price","description","animalsSchema","animalName","type","birthday","clothesSchema","size","carEditModel","animalEditModel","clothesEditModel","ModelLayout","htmlFor","name","component","placeholder","as","rows","cols","value","animalData","navigate","useNavigate","createAnimalArticle","e","a","result","status","Error","editAnimalArticle","initialValues","validationSchema","onSubmit","carData","createArt","editArt","dressData","createDress","editDress"],"mappings":"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","file":"static/js/9.40557738.chunk.js","sourcesContent":["const {REACT_APP_BASE_URL} = process.env;\r\n\r\nexport function getAll() {\r\n    return fetch(`${REACT_APP_BASE_URL}/products`)\r\n        .then(res => res.json());\r\n}\r\n\r\nexport function getByCategory(category) {\r\n    return fetch(`${REACT_APP_BASE_URL}/products/${category}`)\r\n        .then(res => res.json());\r\n}\r\n\r\nexport function getById(id) {\r\n    return fetch(`${REACT_APP_BASE_URL}/products/details/` + id)\r\n        .then(res => res.json());\r\n}\r\n// Create  Article\r\nexport function createArticle(data) {\r\n    return fetch(`${REACT_APP_BASE_URL}/products/create`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(data)\r\n    }).then(res => res.json());\r\n}\r\n// Create  Comments\r\nexport function createComment(data) {\r\n    return fetch(`${REACT_APP_BASE_URL}/products/createComment`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(data)\r\n    }).then(res => res.json());\r\n}\r\n// Get All Comments\r\nexport function getArtComments(id) {\r\n    return fetch(`${REACT_APP_BASE_URL}/products/details/comments/` + id)\r\n        .then(res => res.json());\r\n}\r\n\r\n// Update Art\r\n\r\nexport function updateArticle(id, data) {\r\n    return fetch(`${REACT_APP_BASE_URL}/products/edit/` + id, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(data)\r\n    }).then(res => res.json());\r\n}\r\n\r\n// Delete Art\r\n\r\nexport function deleteArticle(id) {\r\n    return fetch(`${REACT_APP_BASE_URL}/products/deleteArt/` + id, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n    }).then(res => res.json());\r\n}\r\n\r\n// Add Like\r\nexport function addLike(data) {\r\n    return fetch(`${REACT_APP_BASE_URL}/products/likeArt`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(data)\r\n    }).then(res => res.json());\r\n}\r\n// get my articles\r\nexport function getUserArticles(userId) {\r\n    return fetch(`${REACT_APP_BASE_URL}/products/userArticles/` + userId)\r\n        .then(res => res.json());\r\n}\r\nexport function getUserLikedCreatedArticles(userId) {\r\n    return fetch(`${REACT_APP_BASE_URL}/products/userLikedCreatedArt/` + userId)\r\n        .then(res => res.json());\r\n}","\r\nimport style from './Notification.module.css'\r\n\r\nexport default function Notification(props) {\r\n \r\n    \r\n    return (\r\n        <div className={style.errors}>\r\n            <p>{props.children}</p>\r\n        </div>\r\n    )\r\n}\r\n","import './Edit.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { getById } from '../../services/article';\r\n\r\nimport Animals from '../CategoryModels/Animals'\r\nimport Cars from '../CategoryModels/Cars'\r\nimport Clothes from '../CategoryModels/Clothes'\r\n\r\nexport default function Edit() {\r\n\r\n    const [artData, setArtData] = useState([]);\r\n    const { artId } = useParams();\r\n\r\n    useEffect(() => {\r\n        getById(artId).then(res =>\r\n            setArtData(res.article)\r\n        ).catch(err => {\r\n            console.log(err.message);\r\n        })\r\n    }, [artId]);\r\n\r\n    const modelComponents = {\r\n        cars: <Cars artData={artData} artId={artId} />,\r\n        animals: <Animals artData={artData} artId={artId} />,\r\n        clothes: <Clothes artData={artData} artId={artId} />,\r\n    };\r\n\r\n    return (\r\n            <section className=\"edit-article\">\r\n                <div className=\"edit-article-box\">\r\n                    <div className=\"edit-art-text\">\r\n                        <h1 className=\"art-title\">Edit Article</h1>\r\n                    </div>\r\n                    {modelComponents[artData.category]}\r\n                </div>\r\n            </section>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errors\":\"Notification_errors__8Qw2T\"};","import * as yup from 'yup';\r\n\r\nexport const carsSchema = yup.object().shape({\r\n    marke: yup.string().required('Marke is required!'),\r\n    model: yup.string().required('Model is required!'),\r\n    year: yup.date('Invalid Date!').min(1950).max(2021).required('Date is required!'),\r\n    city: yup.string().required('City is required!'),\r\n    image: yup.string().matches(/^https?:\\/\\//,['The Home Image should starts with http:// or https://.']).required('Image is required!'),\r\n    price: yup.number('Price must be positive number!').min(1).required('Price is required!'),\r\n    description: yup.string().required('Description is required!').max(1000, 'Description should be a maximum of 1000 characters long')\r\n})\r\n\r\nexport const animalsSchema = yup.object().shape({\r\n    animalName: yup.string().min(4).max(15).required('Name is required!'),\r\n    type: yup.string().required('Type is required!'),\r\n    birthday: yup.date().min(1960).max(2021).required('Date is required!'),\r\n    city: yup.string().required('City is required!'),\r\n    image: yup.string().matches(/^https?:\\/\\//,['The Home Image should starts with http:// or https://.']).required('Image is required!'),\r\n    price: yup.number('Price must be positive number!').min(1).required('Price is required!'),\r\n    description: yup.string().required('Description is required!').max(1000, 'Description should be a maximum of 1000 characters long')\r\n})\r\n\r\nexport const clothesSchema = yup.object().shape({\r\n    marke: yup.string().max(15).required('Marke is required!'),\r\n    type: yup.string().required('Type is required!'),\r\n    size: yup.string().required('Size is required!'),\r\n    year: yup.date().min(1960).max(2021).required('Date is required!'),\r\n    city: yup.string().required('City is required!'),\r\n    image: yup.string().matches(/^https?:\\/\\//,['The Home Image should starts with http:// or https://.']).required('Image is required!'),\r\n    price: yup.number('Price must be positive number!').min(1).required('Price is required!'),\r\n    description: yup.string().required('Description is required!').max(1000, 'Description should be a maximum of 1000 characters long')\r\n})\r\n","export function carEditModel(props) {\r\n    let carData;\r\n    if (!props.artData) {\r\n        carData = {\r\n            marke: \"\",\r\n            model: \"\",\r\n            year: \"\",\r\n            city: \"\",\r\n            image: \"\",\r\n            price: \"\",\r\n            description: \"\"\r\n        }\r\n    } else {\r\n        carData = {\r\n            marke: props.artData.marke,\r\n            model: props.artData.model,\r\n            year: props.artData.year,\r\n            city: props.artData.city,\r\n            image: props.artData.image,\r\n            price: props.artData.price,\r\n            description: props.artData.description\r\n        }\r\n    }\r\n\r\n    return carData;\r\n\r\n}\r\nexport function animalEditModel(props) {\r\n    let animalData;\r\n    if (!props.artData) {\r\n        animalData = {\r\n            animalName: \"\",\r\n            type: \"\",\r\n            birthday: \"\",\r\n            city: \"\",\r\n            image: \"\",\r\n            price: \"\",\r\n            description: \"\"\r\n        }\r\n    } else {\r\n        animalData = {\r\n            animalName: props.artData.animalName,\r\n            type: props.artData.type,\r\n            birthday: props.artData.birthday,\r\n            city: props.artData.city,\r\n            image: props.artData.image,\r\n            price: props.artData.price,\r\n            description: props.artData.description\r\n        }\r\n    }\r\n\r\n    return animalData;\r\n\r\n}\r\nexport function clothesEditModel(props) {\r\n    let clothesData;\r\n    if (!props.artData) {\r\n        clothesData = {\r\n            marke: \"\",\r\n            type: \"\",\r\n            size: \"\",\r\n            year: \"\",\r\n            city: \"\",\r\n            image: \"\",\r\n            price: \"\",\r\n            description: \"\"\r\n        }\r\n    } else {\r\n        clothesData = {\r\n            marke: props.artData.marke,\r\n            type: props.artData.type,\r\n            size: props.artData.size,\r\n            year: props.artData.year,\r\n            city: props.artData.city,\r\n            image: props.artData.image,\r\n            price: props.artData.price,\r\n            description: props.artData.description\r\n        }\r\n    }\r\n\r\n    return clothesData;\r\n\r\n}","import React from 'react'\r\nimport { Field, ErrorMessage } from 'formik';\r\nimport Notification from '../../Notification/InputNotification/Notification'\r\n\r\n\r\nexport default function ModelLayout({ data }) {\r\n    return (\r\n        <>\r\n            <label htmlFor=\"city\">City</label>\r\n            <Field\r\n                type=\"text\"\r\n                id=\"city\"\r\n                name=\"city\"\r\n            />\r\n            <ErrorMessage name=\"city\" component={Notification} />\r\n\r\n            <label htmlFor=\"image\">Image</label>\r\n            <Field\r\n                type=\"text\"\r\n                id=\"image\"\r\n                name=\"image\"\r\n                placeholder=\"Please use the URL address of the selected picture!\"\r\n            />\r\n            <ErrorMessage name=\"image\" component={Notification} />\r\n\r\n            <label htmlFor=\"price\">Price</label>\r\n            <Field\r\n                type=\"number\"\r\n                id=\"price\"\r\n                name=\"price\"\r\n            />\r\n            <ErrorMessage name=\"price\" component={Notification} />\r\n            <label htmlFor=\"description\">Description</label>\r\n            <Field\r\n                as=\"textarea\"\r\n                id=\"description\"\r\n                name=\"description\"\r\n                rows=\"4\"\r\n                cols=\"50\"\r\n            />\r\n            <ErrorMessage name=\"description\" component={Notification} />\r\n            {data.price ? <input type=\"submit\" className=\"createArtBtn\" value=\"Edit Article\" /> :\r\n                <input type=\"submit\" className=\"createArtBtn\" value=\"Create Article\" />}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { animalsSchema } from '../../yupSchemaValidation/modelsValidation'\r\nimport Notification from '../Notification/InputNotification/Notification'\r\n\r\nimport { createArticle, updateArticle } from '../../services/article';\r\nimport { animalEditModel } from '../Edit/EditModel/editModel';\r\n\r\nimport ModelLayout from '../CategoryModels/Layout/ModelLayout';\r\n\r\nexport default function Animals(props) {\r\n\r\n    const animalData = animalEditModel(props);\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const createAnimalArticle = async (e) => {\r\n\r\n        const data = {\r\n            animalName: e.animalName,\r\n            type: e.type,\r\n            birthday: e.birthday,\r\n            city: e.city,\r\n            image: e.image,\r\n            price: e.price,\r\n            description: e.description,\r\n            category: 'animals'\r\n        }\r\n        try {\r\n            const result = await createArticle(data);\r\n            if (result.status === 404) {\r\n                throw new Error(result.message)\r\n            } else {\r\n                navigate('/catalog');\r\n            }\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n\r\n    const editAnimalArticle = async (e) => {\r\n        const data = {\r\n            animalName: e.animalName,\r\n            type: e.type,\r\n            birthday: e.birthday,\r\n            city: e.city,\r\n            image: e.image,\r\n            price: e.price,\r\n            description: e.description,\r\n            category: 'animals'\r\n        }\r\n        try {\r\n            const result = await updateArticle(props.artId, data);\r\n            if (result.status === 404) {\r\n                throw new Error(result.message)\r\n            } else {\r\n                navigate('/catalog');\r\n            }\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                initialValues={animalData}\r\n                validationSchema={animalsSchema}\r\n                onSubmit={animalData.price ? editAnimalArticle : createAnimalArticle}\r\n            >\r\n                <Form>\r\n                    <label htmlFor=\"animalName\">Name</label>\r\n                    <Field\r\n                        type=\"text\"\r\n                        id=\"animalName\"\r\n                        name=\"animalName\"\r\n                    />\r\n                    <ErrorMessage name=\"animalName\" component={Notification} />\r\n\r\n                    <label htmlFor=\"type\">Type</label>\r\n                    <Field\r\n                        type=\"text\"\r\n                        id=\"type\"\r\n                        name=\"type\"\r\n                    />\r\n                    <ErrorMessage name=\"type\" component={Notification} />\r\n\r\n                    <label htmlFor=\"birthday\">Birthday</label>\r\n                    <Field\r\n                        type=\"date\"\r\n                        id=\"birthday\"\r\n                        name=\"birthday\"\r\n                    />\r\n                    <ErrorMessage name=\"birthday\" component={Notification} />\r\n\r\n                    <ModelLayout data={animalData} />\r\n                </Form>\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { carsSchema } from '../../yupSchemaValidation/modelsValidation';\r\nimport Notification from '../Notification/InputNotification/Notification'\r\n\r\nimport { createArticle, updateArticle } from '../../services/article';\r\nimport { carEditModel } from '../Edit/EditModel/editModel';\r\n\r\nimport ModelLayout from '../CategoryModels/Layout/ModelLayout';\r\n\r\nexport default function Cars(props) {\r\n\r\n    const carData = carEditModel(props);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const createArt = async (e) => {\r\n\r\n        const data = {\r\n            marke: e.marke,\r\n            model: e.model,\r\n            year: e.year,\r\n            city: e.city,\r\n            image: e.image,\r\n            price: e.price,\r\n            description: e.description,\r\n            category: 'cars'\r\n        }\r\n        try {\r\n            const result = await createArticle(data);\r\n\r\n            if (result.status === 404) {\r\n                throw new Error(result.message)\r\n\r\n            } else {\r\n                navigate('/catalog');\r\n            }\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n    const editArt = async (e) => {\r\n        const data = {\r\n            marke: e.marke,\r\n            model: e.model,\r\n            year: e.year,\r\n            city: e.city,\r\n            image: e.image,\r\n            price: e.price,\r\n            description: e.description,\r\n            category: 'cars'\r\n        }\r\n        try {\r\n            const result = await updateArticle(props.artId, data);\r\n            if (result.status === 404) {\r\n                throw new Error(result.message)\r\n            } else {\r\n                navigate('/catalog');\r\n            }\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                initialValues={carData}\r\n                validationSchema={carsSchema}\r\n                onSubmit={carData.price ? editArt : createArt}\r\n            >\r\n                <Form>\r\n                    <label htmlFor=\"marke\">Marke</label>\r\n                    <Field\r\n                        type=\"text\"\r\n                        id=\"marke\"\r\n                        name=\"marke\"\r\n\r\n                    />\r\n                    <ErrorMessage name=\"marke\" component={Notification} />\r\n\r\n                    <label htmlFor=\"model\">Model</label>\r\n                    <Field\r\n                        type=\"text\"\r\n                        id=\"model\"\r\n                        name=\"model\"\r\n                    />\r\n                    <ErrorMessage name=\"model\" component={Notification} />\r\n\r\n                    <label htmlFor=\"year\">Year</label>\r\n                    <Field\r\n                        type=\"date\"\r\n                        id=\"year\"\r\n                        name=\"year\"\r\n                    />\r\n                    <ErrorMessage name=\"year\" component={Notification} />\r\n\r\n                    <ModelLayout data={carData} />\r\n                </Form>\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { clothesSchema } from '../../yupSchemaValidation/modelsValidation';\r\nimport Notification from '../Notification/InputNotification/Notification'\r\n\r\nimport { createArticle, updateArticle } from '../../services/article';\r\nimport { clothesEditModel } from '../Edit/EditModel/editModel';\r\n\r\nimport ModelLayout from '../CategoryModels/Layout/ModelLayout';\r\n\r\nexport default function Clothes(props) {\r\n\r\n    const dressData = clothesEditModel(props);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const createDress = async (e) => {\r\n        const data = {\r\n            marke: e.marke,\r\n            type: e.type,\r\n            size: e.size,\r\n            year: e.year,\r\n            city: e.city,\r\n            image: e.image,\r\n            price: e.price,\r\n            description: e.description,\r\n            category: 'clothes'\r\n        }\r\n        try {\r\n            const result = await createArticle(data);\r\n            if (result.status === 404) {\r\n                throw new Error(result.message)\r\n            } else {\r\n                navigate('/catalog');\r\n            }\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n    const editDress = async (e) => {\r\n        const data = {\r\n            marke: e.marke,\r\n            type: e.type,\r\n            size: e.size,\r\n            year: e.year,\r\n            city: e.city,\r\n            image: e.image,\r\n            price: e.price,\r\n            description: e.description,\r\n            category: 'clothes'\r\n        }\r\n        try {\r\n            const result = await updateArticle(props.artId, data);\r\n            if (result.status === 404) {\r\n                throw new Error(result.message)\r\n            } else {\r\n                navigate('/catalog');\r\n            }\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                initialValues={dressData}\r\n                validationSchema={clothesSchema}\r\n                onSubmit={dressData.price ? editDress : createDress}\r\n            >\r\n\r\n                <Form>\r\n                    <label htmlFor=\"marke\">Marke</label>\r\n                    <Field\r\n                        type=\"text\"\r\n                        id=\"marke\"\r\n                        name=\"marke\"\r\n                    />\r\n                    <ErrorMessage name=\"marke\" component={Notification} />\r\n\r\n                    <label htmlFor=\"type\">Type</label>\r\n                    <Field\r\n                        type=\"text\"\r\n                        id=\"type\"\r\n                        name=\"type\"\r\n                    />\r\n                    <ErrorMessage name=\"type\" component={Notification} />\r\n\r\n                    <label htmlFor=\"size\">Size</label>\r\n                    <Field\r\n                        type=\"string\"\r\n                        id=\"size\"\r\n                        name=\"size\"\r\n                    />\r\n                    <ErrorMessage name=\"size\" component={Notification} />\r\n\r\n                    <label htmlFor=\"year\">Produced on:</label>\r\n                    <Field\r\n                        type=\"date\"\r\n                        id=\"year\"\r\n                        name=\"year\"\r\n                    />\r\n                    <ErrorMessage name=\"year\" component={Notification} />\r\n\r\n                    <ModelLayout data={dressData} />\r\n                </Form>\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\n"],"sourceRoot":""}