{"version":3,"sources":["services/article.js","components/Notification/InputNotification/Notification.js","components/Create/Create.js","components/Notification/InputNotification/Notification.module.css","yupSchemaValidation/modelsValidation.js","components/Edit/EditModel/editModel.js","components/CategoryModels/Layout/ModelLayout.js","components/CategoryModels/Animals.js","components/CategoryModels/Cars.js","components/CategoryModels/Clothes.js"],"names":["REACT_APP_BASE_URL","process","getAll","fetch","then","res","json","getByCategory","category","getById","id","createArticle","data","method","headers","credentials","body","JSON","stringify","createComment","getArtComments","updateArticle","deleteArticle","addLike","getUserArticles","userId","getUserLikedCreatedArticles","Notification","props","className","style","errors","children","Create","model","useState","value","setValue","modelComponents","cars","Cars","animals","Animals","clothings","Clothes","htmlFor","name","onChange","e","preventDefault","target","module","exports","carsSchema","yup","shape","marke","required","year","min","max","city","image","matches","price","description","animalsSchema","animalName","type","birthday","clothesSchema","size","carEditModel","artData","animalEditModel","clothesEditModel","ModelLayout","component","placeholder","as","rows","cols","animalData","navigate","useNavigate","createAnimalArticle","a","result","status","Error","message","console","log","editAnimalArticle","artId","initialValues","validationSchema","onSubmit","carData","createArt","editArt","dressData","createDress","editDress"],"mappings":"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","file":"static/js/8.2b4f6972.chunk.js","sourcesContent":["const {REACT_APP_BASE_URL} = process.env;\r\n\r\nexport function getAll() {\r\n    return fetch(`${REACT_APP_BASE_URL}/products`)\r\n        .then(res => res.json());\r\n}\r\n\r\nexport function getByCategory(category) {\r\n    return fetch(`${REACT_APP_BASE_URL}/products/${category}`)\r\n        .then(res => res.json());\r\n}\r\n\r\nexport function getById(id) {\r\n    return fetch(`${REACT_APP_BASE_URL}/products/details/` + id)\r\n        .then(res => res.json());\r\n}\r\n// Create  Article\r\nexport function createArticle(data) {\r\n    return fetch(`${REACT_APP_BASE_URL}/products/create`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(data)\r\n    }).then(res => res.json());\r\n}\r\n// Create  Comments\r\nexport function createComment(data) {\r\n    return fetch(`${REACT_APP_BASE_URL}/products/createComment`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(data)\r\n    }).then(res => res.json());\r\n}\r\n// Get All Comments\r\nexport function getArtComments(id) {\r\n    return fetch(`${REACT_APP_BASE_URL}/products/details/comments/` + id)\r\n        .then(res => res.json());\r\n}\r\n\r\n// Update Art\r\n\r\nexport function updateArticle(id, data) {\r\n    return fetch(`${REACT_APP_BASE_URL}/products/edit/` + id, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(data)\r\n    }).then(res => res.json());\r\n}\r\n\r\n// Delete Art\r\n\r\nexport function deleteArticle(id) {\r\n    return fetch(`${REACT_APP_BASE_URL}/products/deleteArt/` + id, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n    }).then(res => res.json());\r\n}\r\n\r\n// Add Like\r\nexport function addLike(data) {\r\n    return fetch(`${REACT_APP_BASE_URL}/products/likeArt`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(data)\r\n    }).then(res => res.json());\r\n}\r\n// get my articles\r\nexport function getUserArticles(userId) {\r\n    return fetch(`${REACT_APP_BASE_URL}/products/userArticles/` + userId)\r\n        .then(res => res.json());\r\n}\r\nexport function getUserLikedCreatedArticles(userId) {\r\n    return fetch(`${REACT_APP_BASE_URL}/products/userLikedCreatedArt/` + userId)\r\n        .then(res => res.json());\r\n}","\r\nimport style from './Notification.module.css'\r\n\r\nexport default function Notification(props) {\r\n \r\n    \r\n    return (\r\n        <div className={style.errors}>\r\n            <p>{props.children}</p>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\n\r\nimport './Create.css';\r\n\r\nimport Animals from '../CategoryModels/Animals'\r\nimport Cars from '../CategoryModels/Cars'\r\nimport Clothes from '../CategoryModels/Clothes'\r\n\r\nexport default function Create() {\r\n\r\n    const [value, setValue] = useState('');\r\n    let model;\r\n\r\n    const modelComponents = {\r\n        cars: <Cars />,\r\n        animals: <Animals />,\r\n        clothings: <Clothes />,\r\n    }\r\n\r\n    const onChangeSelect = (e) => {\r\n        e.preventDefault()\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    if (value !== \"\") {\r\n        model = modelComponents[value];\r\n    }\r\n\r\n    return (\r\n        <section className=\"create-article\">\r\n            <div className=\"create-article-box\">\r\n                <div className=\"create-art-text\">\r\n                    <h1 className=\"art-title\">Create Article</h1>\r\n                    <p className=\"create-art-untertitle\">Please fill in this form to create an article.</p>\r\n                </div>\r\n                <form>\r\n                    <label htmlFor=\"category\">Choose a category:</label>\r\n                    <select name=\"category\" id=\"category\" onChange={onChangeSelect}>\r\n                        <option value=\"\"></option>\r\n                        <option value=\"cars\">Cars</option>\r\n                        <option value=\"animals\">Animals</option>\r\n                        <option value=\"clothings\">Clothing</option>\r\n                    </select>\r\n                </form>\r\n                {model}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errors\":\"Notification_errors__8Qw2T\"};","import * as yup from 'yup';\r\n\r\nexport const carsSchema = yup.object().shape({\r\n    marke: yup.string().required('Marke is required!'),\r\n    model: yup.string().required('Model is required!'),\r\n    year: yup.date('Invalid Date!').min(1950).max(2021).required('Date is required!'),\r\n    city: yup.string().required('City is required!'),\r\n    image: yup.string().matches(/^https?:\\/\\//,['The Home Image should starts with http:// or https://.']).required('Image is required!'),\r\n    price: yup.number('Price must be positive number!').min(1).required('Price is required!'),\r\n    description: yup.string().required('Description is required!').max(1000, 'Description should be a maximum of 1000 characters long')\r\n})\r\n\r\nexport const animalsSchema = yup.object().shape({\r\n    animalName: yup.string().min(4).max(15).required('Name is required!'),\r\n    type: yup.string().required('Type is required!'),\r\n    birthday: yup.date().min(1960).max(2021).required('Date is required!'),\r\n    city: yup.string().required('City is required!'),\r\n    image: yup.string().matches(/^https?:\\/\\//,['The Home Image should starts with http:// or https://.']).required('Image is required!'),\r\n    price: yup.number('Price must be positive number!').min(1).required('Price is required!'),\r\n    description: yup.string().required('Description is required!').max(1000, 'Description should be a maximum of 1000 characters long')\r\n})\r\n\r\nexport const clothesSchema = yup.object().shape({\r\n    marke: yup.string().max(15).required('Marke is required!'),\r\n    type: yup.string().required('Type is required!'),\r\n    size: yup.string().required('Size is required!'),\r\n    year: yup.date().min(1960).max(2021).required('Date is required!'),\r\n    city: yup.string().required('City is required!'),\r\n    image: yup.string().matches(/^https?:\\/\\//,['The Home Image should starts with http:// or https://.']).required('Image is required!'),\r\n    price: yup.number('Price must be positive number!').min(1).required('Price is required!'),\r\n    description: yup.string().required('Description is required!').max(1000, 'Description should be a maximum of 1000 characters long')\r\n})\r\n","export function carEditModel(props) {\r\n    let carData;\r\n    if (!props.artData) {\r\n        carData = {\r\n            marke: \"\",\r\n            model: \"\",\r\n            year: \"\",\r\n            city: \"\",\r\n            image: \"\",\r\n            price: \"\",\r\n            description: \"\"\r\n        }\r\n    } else {\r\n        carData = {\r\n            marke: props.artData.marke,\r\n            model: props.artData.model,\r\n            year: props.artData.year,\r\n            city: props.artData.city,\r\n            image: props.artData.image,\r\n            price: props.artData.price,\r\n            description: props.artData.description\r\n        }\r\n    }\r\n\r\n    return carData;\r\n\r\n}\r\nexport function animalEditModel(props) {\r\n    let animalData;\r\n    if (!props.artData) {\r\n        animalData = {\r\n            animalName: \"\",\r\n            type: \"\",\r\n            birthday: \"\",\r\n            city: \"\",\r\n            image: \"\",\r\n            price: \"\",\r\n            description: \"\"\r\n        }\r\n    } else {\r\n        animalData = {\r\n            animalName: props.artData.animalName,\r\n            type: props.artData.type,\r\n            birthday: props.artData.birthday,\r\n            city: props.artData.city,\r\n            image: props.artData.image,\r\n            price: props.artData.price,\r\n            description: props.artData.description\r\n        }\r\n    }\r\n\r\n    return animalData;\r\n\r\n}\r\nexport function clothesEditModel(props) {\r\n    let clothesData;\r\n    if (!props.artData) {\r\n        clothesData = {\r\n            marke: \"\",\r\n            type: \"\",\r\n            size: \"\",\r\n            year: \"\",\r\n            city: \"\",\r\n            image: \"\",\r\n            price: \"\",\r\n            description: \"\"\r\n        }\r\n    } else {\r\n        clothesData = {\r\n            marke: props.artData.marke,\r\n            type: props.artData.type,\r\n            size: props.artData.size,\r\n            year: props.artData.year,\r\n            city: props.artData.city,\r\n            image: props.artData.image,\r\n            price: props.artData.price,\r\n            description: props.artData.description\r\n        }\r\n    }\r\n\r\n    return clothesData;\r\n\r\n}","import React from 'react'\r\nimport { Field, ErrorMessage } from 'formik';\r\nimport Notification from '../../Notification/InputNotification/Notification'\r\n\r\n\r\nexport default function ModelLayout({ data }) {\r\n    return (\r\n        <>\r\n            <label htmlFor=\"city\">City</label>\r\n            <Field\r\n                type=\"text\"\r\n                id=\"city\"\r\n                name=\"city\"\r\n            />\r\n            <ErrorMessage name=\"city\" component={Notification} />\r\n\r\n            <label htmlFor=\"image\">Image</label>\r\n            <Field\r\n                type=\"text\"\r\n                id=\"image\"\r\n                name=\"image\"\r\n                placeholder=\"Please use the URL address of the selected picture!\"\r\n            />\r\n            <ErrorMessage name=\"image\" component={Notification} />\r\n\r\n            <label htmlFor=\"price\">Price</label>\r\n            <Field\r\n                type=\"number\"\r\n                id=\"price\"\r\n                name=\"price\"\r\n            />\r\n            <ErrorMessage name=\"price\" component={Notification} />\r\n            <label htmlFor=\"description\">Description</label>\r\n            <Field\r\n                as=\"textarea\"\r\n                id=\"description\"\r\n                name=\"description\"\r\n                rows=\"4\"\r\n                cols=\"50\"\r\n            />\r\n            <ErrorMessage name=\"description\" component={Notification} />\r\n            {data.price ? <input type=\"submit\" className=\"createArtBtn\" value=\"Edit Article\" /> :\r\n                <input type=\"submit\" className=\"createArtBtn\" value=\"Create Article\" />}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { animalsSchema } from '../../yupSchemaValidation/modelsValidation'\r\nimport Notification from '../Notification/InputNotification/Notification'\r\n\r\nimport { createArticle, updateArticle } from '../../services/article';\r\nimport { animalEditModel } from '../Edit/EditModel/editModel';\r\n\r\nimport ModelLayout from '../CategoryModels/Layout/ModelLayout';\r\n\r\nexport default function Animals(props) {\r\n\r\n    const animalData = animalEditModel(props);\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const createAnimalArticle = async (e) => {\r\n\r\n        const data = {\r\n            animalName: e.animalName,\r\n            type: e.type,\r\n            birthday: e.birthday,\r\n            city: e.city,\r\n            image: e.image,\r\n            price: e.price,\r\n            description: e.description,\r\n            category: 'animals'\r\n        }\r\n        try {\r\n            const result = await createArticle(data);\r\n            if (result.status === 404) {\r\n                throw new Error(result.message)\r\n            } else {\r\n                navigate('/catalog');\r\n            }\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n\r\n    const editAnimalArticle = async (e) => {\r\n        const data = {\r\n            animalName: e.animalName,\r\n            type: e.type,\r\n            birthday: e.birthday,\r\n            city: e.city,\r\n            image: e.image,\r\n            price: e.price,\r\n            description: e.description,\r\n            category: 'animals'\r\n        }\r\n        try {\r\n            const result = await updateArticle(props.artId, data);\r\n            if (result.status === 404) {\r\n                throw new Error(result.message)\r\n            } else {\r\n                navigate('/catalog');\r\n            }\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                initialValues={animalData}\r\n                validationSchema={animalsSchema}\r\n                onSubmit={animalData.price ? editAnimalArticle : createAnimalArticle}\r\n            >\r\n                <Form>\r\n                    <label htmlFor=\"animalName\">Name</label>\r\n                    <Field\r\n                        type=\"text\"\r\n                        id=\"animalName\"\r\n                        name=\"animalName\"\r\n                    />\r\n                    <ErrorMessage name=\"animalName\" component={Notification} />\r\n\r\n                    <label htmlFor=\"type\">Type</label>\r\n                    <Field\r\n                        type=\"text\"\r\n                        id=\"type\"\r\n                        name=\"type\"\r\n                    />\r\n                    <ErrorMessage name=\"type\" component={Notification} />\r\n\r\n                    <label htmlFor=\"birthday\">Birthday</label>\r\n                    <Field\r\n                        type=\"date\"\r\n                        id=\"birthday\"\r\n                        name=\"birthday\"\r\n                    />\r\n                    <ErrorMessage name=\"birthday\" component={Notification} />\r\n\r\n                    <ModelLayout data={animalData} />\r\n                </Form>\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { carsSchema } from '../../yupSchemaValidation/modelsValidation';\r\nimport Notification from '../Notification/InputNotification/Notification'\r\n\r\nimport { createArticle, updateArticle } from '../../services/article';\r\nimport { carEditModel } from '../Edit/EditModel/editModel';\r\n\r\nimport ModelLayout from '../CategoryModels/Layout/ModelLayout';\r\n\r\nexport default function Cars(props) {\r\n\r\n    const carData = carEditModel(props);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const createArt = async (e) => {\r\n\r\n        const data = {\r\n            marke: e.marke,\r\n            model: e.model,\r\n            year: e.year,\r\n            city: e.city,\r\n            image: e.image,\r\n            price: e.price,\r\n            description: e.description,\r\n            category: 'cars'\r\n        }\r\n        try {\r\n            const result = await createArticle(data);\r\n\r\n            if (result.status === 404) {\r\n                throw new Error(result.message)\r\n\r\n            } else {\r\n                navigate('/catalog');\r\n            }\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n    const editArt = async (e) => {\r\n        const data = {\r\n            marke: e.marke,\r\n            model: e.model,\r\n            year: e.year,\r\n            city: e.city,\r\n            image: e.image,\r\n            price: e.price,\r\n            description: e.description,\r\n            category: 'cars'\r\n        }\r\n        try {\r\n            const result = await updateArticle(props.artId, data);\r\n            if (result.status === 404) {\r\n                throw new Error(result.message)\r\n            } else {\r\n                navigate('/catalog');\r\n            }\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                initialValues={carData}\r\n                validationSchema={carsSchema}\r\n                onSubmit={carData.price ? editArt : createArt}\r\n            >\r\n                <Form>\r\n                    <label htmlFor=\"marke\">Marke</label>\r\n                    <Field\r\n                        type=\"text\"\r\n                        id=\"marke\"\r\n                        name=\"marke\"\r\n\r\n                    />\r\n                    <ErrorMessage name=\"marke\" component={Notification} />\r\n\r\n                    <label htmlFor=\"model\">Model</label>\r\n                    <Field\r\n                        type=\"text\"\r\n                        id=\"model\"\r\n                        name=\"model\"\r\n                    />\r\n                    <ErrorMessage name=\"model\" component={Notification} />\r\n\r\n                    <label htmlFor=\"year\">Year</label>\r\n                    <Field\r\n                        type=\"date\"\r\n                        id=\"year\"\r\n                        name=\"year\"\r\n                    />\r\n                    <ErrorMessage name=\"year\" component={Notification} />\r\n\r\n                    <ModelLayout data={carData} />\r\n                </Form>\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { clothesSchema } from '../../yupSchemaValidation/modelsValidation';\r\nimport Notification from '../Notification/InputNotification/Notification'\r\n\r\nimport { createArticle, updateArticle } from '../../services/article';\r\nimport { clothesEditModel } from '../Edit/EditModel/editModel';\r\n\r\nimport ModelLayout from '../CategoryModels/Layout/ModelLayout';\r\n\r\nexport default function Clothes(props) {\r\n\r\n    const dressData = clothesEditModel(props);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const createDress = async (e) => {\r\n        const data = {\r\n            marke: e.marke,\r\n            type: e.type,\r\n            size: e.size,\r\n            year: e.year,\r\n            city: e.city,\r\n            image: e.image,\r\n            price: e.price,\r\n            description: e.description,\r\n            category: 'clothes'\r\n        }\r\n        try {\r\n            const result = await createArticle(data);\r\n            if (result.status === 404) {\r\n                throw new Error(result.message)\r\n            } else {\r\n                navigate('/catalog');\r\n            }\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n    const editDress = async (e) => {\r\n        const data = {\r\n            marke: e.marke,\r\n            type: e.type,\r\n            size: e.size,\r\n            year: e.year,\r\n            city: e.city,\r\n            image: e.image,\r\n            price: e.price,\r\n            description: e.description,\r\n            category: 'clothes'\r\n        }\r\n        try {\r\n            const result = await updateArticle(props.artId, data);\r\n            if (result.status === 404) {\r\n                throw new Error(result.message)\r\n            } else {\r\n                navigate('/catalog');\r\n            }\r\n        } catch (err) {\r\n            console.log(err.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                initialValues={dressData}\r\n                validationSchema={clothesSchema}\r\n                onSubmit={dressData.price ? editDress : createDress}\r\n            >\r\n\r\n                <Form>\r\n                    <label htmlFor=\"marke\">Marke</label>\r\n                    <Field\r\n                        type=\"text\"\r\n                        id=\"marke\"\r\n                        name=\"marke\"\r\n                    />\r\n                    <ErrorMessage name=\"marke\" component={Notification} />\r\n\r\n                    <label htmlFor=\"type\">Type</label>\r\n                    <Field\r\n                        type=\"text\"\r\n                        id=\"type\"\r\n                        name=\"type\"\r\n                    />\r\n                    <ErrorMessage name=\"type\" component={Notification} />\r\n\r\n                    <label htmlFor=\"size\">Size</label>\r\n                    <Field\r\n                        type=\"string\"\r\n                        id=\"size\"\r\n                        name=\"size\"\r\n                    />\r\n                    <ErrorMessage name=\"size\" component={Notification} />\r\n\r\n                    <label htmlFor=\"year\">Produced on:</label>\r\n                    <Field\r\n                        type=\"date\"\r\n                        id=\"year\"\r\n                        name=\"year\"\r\n                    />\r\n                    <ErrorMessage name=\"year\" component={Notification} />\r\n\r\n                    <ModelLayout data={dressData} />\r\n                </Form>\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\n"],"sourceRoot":""}